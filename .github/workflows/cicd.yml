name: Web API Deploy Pipeline
on:
    push:
        paths:
            - '.github/workflows/**'
            - 'cicd-section/api/**' 
# 環境変数
env:
    AWS_REGION: ap-northeast-1
    ECS_CLUSTER: t-masuda-cicd
    ECS_SERVICE: t-masuda-app-service
    ECR_REPOSITORY: t-masuda-app-cicd
    ECS_TASK_DEFINITION_API: cicd-section/.aws/task-def-api.json

permissions:
    id-token: write
    contents: read

jobs:
  # Test
  test-and-build:
      runs-on: ubuntu-latest
      defaults:
          run:
              working-directory: cicd-section/api
      steps:
          # Checkout code
          - uses: actions/checkout@v4

          - name: Run Tests and Build
            run: docker image build -t temp_api_image:latest .
          
          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              aws-region: ${{ env.AWS_REGION }}
              role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Push the image to Amazon ECR
            env:
              ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            run: |
              docker tag temp_api_image:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
              docker image push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
              echo $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} > app-image-uri.txt

          - name: Upload the image uri file as an artifact
            uses: actions/upload-artifact@v2
            with:
              name: app-image-uri
              path: cicd-section/api/app-image-uri.txt
  deploy:
    runs-on: ubuntu-latest
    needs: [test-and-build] # 依存関係 --- 成功していることが前提
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: app-image-uri
          path: artifacts

      - name: Define the image uri
        run: |
          echo "API_IMAGE_URI=$(cat artifacts/api-image-uri.txt)" >> $GITHUB_ENV

      - name: Fill in the new image URI in the task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_API }}
          container-name: api
          image: ${{ env.API_IMAGE_URI }}

      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
